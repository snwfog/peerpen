// Generated by CoffeeScript 1.7.1
var MoveBoxCommand,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

MoveBoxCommand = (function(_super) {
  __extends(MoveBoxCommand, _super);

  function MoveBoxCommand(box, toPosition, fromPosition) {
    this.box = box;
    this.toPosition = toPosition;
    this.fromPosition = fromPosition;
    MoveBoxCommand.__super__.constructor.call(this);
    this.boxIds.push(this.box.element.attr('id'));
    if (fromPosition == null) {
      this.fromPosition = this.box.currentPosition();
    }
  }

  MoveBoxCommand.prototype.execute = function() {
    return this.box.setPosition(this.toPosition.left, this.toPosition.top);
  };

  MoveBoxCommand.prototype.undo = function() {
    return this.box.setPosition(this.fromPosition.left, this.fromPosition.top);
  };

  MoveBoxCommand.prototype.getType = function() {
    return 'Modify';
  };

  return MoveBoxCommand;

})(Command);
