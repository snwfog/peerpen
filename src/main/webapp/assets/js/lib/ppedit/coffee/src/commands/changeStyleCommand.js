// Generated by CoffeeScript 1.7.1
var ChangeStyleCommand,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

ChangeStyleCommand = (function(_super) {
  __extends(ChangeStyleCommand, _super);

  function ChangeStyleCommand(editor, boxesSelector, newCssOptions) {
    this.editor = editor;
    this.boxesSelector = boxesSelector;
    this.newCssOptions = newCssOptions;
    ChangeStyleCommand.__super__.constructor.call(this);
    this.boxesToCopy = this.boxesSelector.clone();
  }

  ChangeStyleCommand.prototype.execute = function() {
    return this.boxesSelector.each((function(_this) {
      return function(index, item) {
        return $(item).css(_this.newCssOptions);
      };
    })(this));
  };

  ChangeStyleCommand.prototype.undo = function() {
    return this.boxesToCopy.each((function(_this) {
      return function(index, item) {
        var prevCssOptions;
        prevCssOptions = CSSJSON.toJSON(_this.boxesToCopy.filter('#' + item.id).attr('style')).attributes;
        return _this.boxesSelector.filter('#' + item.id).css(prevCssOptions);
      };
    })(this));
  };

  ChangeStyleCommand.prototype.getType = function() {
    return 'Modify';
  };

  return ChangeStyleCommand;

})(Command);
