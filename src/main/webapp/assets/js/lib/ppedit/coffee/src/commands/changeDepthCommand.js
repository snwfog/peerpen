// Generated by CoffeeScript 1.7.1
var ChangeDepthCommand,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

ChangeDepthCommand = (function(_super) {
  __extends(ChangeDepthCommand, _super);


  /*
  Specify one Command for changing the depth of a box,
  where @boxSelector refers to the box to move, and 
  @moveUp is the parameter that specify the box to move up
  if true, or down if false.
   */

  function ChangeDepthCommand(editor, pageNum, boxSelector, moveUp) {
    this.editor = editor;
    this.pageNum = pageNum;
    this.moveUp = moveUp;
    ChangeDepthCommand.__super__.constructor.call(this);
    this.boxId = boxSelector.attr('id');
  }

  ChangeDepthCommand.prototype.execute = function() {
    if (this.moveUp) {
      return this.swapRowWithUpperRow();
    } else {
      return this.swapRowWithLowerRow();
    }
  };

  ChangeDepthCommand.prototype.undo = function() {
    if (this.moveUp) {
      return this.swapRowWithLowerRow();
    } else {
      return this.swapRowWithUpperRow();
    }
  };

  ChangeDepthCommand.prototype.swapRowWithUpperRow = function() {
    var index, row, upperRow;
    row = this.editor.panel.getRowWithBoxId(this.boxId);
    index = row.index();
    if (index - 1 >= 0) {
      upperRow = this.editor.panel.getRowAtIndex(this.pageNum, index - 1);
      return this.swapRows(row, upperRow);
    }
  };

  ChangeDepthCommand.prototype.swapRowWithLowerRow = function() {
    var index, lowerRow, row;
    row = this.editor.panel.getRowWithBoxId(this.boxId);
    index = row.index();
    if (index + 1 < this.editor.panel.getRows(this.pageNum).length) {
      lowerRow = this.editor.panel.getRowAtIndex(this.pageNum, index + 1);
      return this.swapRows(row, lowerRow);
    }
  };


  /*
  Swaps RowOne with RowTwo. Also swaps the z-index of the boxes
  associated with each row.
   */

  ChangeDepthCommand.prototype.swapRows = function(rowOne, rowTwo) {
    var rowOneBox, rowOneBoxTempZindex, rowTwoBox;
    if (rowOne.index() < rowTwo.index()) {
      rowOne.insertAfter(rowTwo);
    } else {
      rowOne.insertBefore(rowTwo);
    }
    rowOneBox = this.editor.areas[this.pageNum].boxesContainer.boxes[rowOne.attr('ppedit-box-id')];
    rowOneBoxTempZindex = rowOneBox.element.css('z-index');
    rowTwoBox = this.editor.areas[this.pageNum].boxesContainer.boxes[rowTwo.attr('ppedit-box-id')];
    rowOneBox.element.css('z-index', rowTwoBox.element.css('z-index'));
    return rowTwoBox.element.css('z-index', rowOneBoxTempZindex);
  };

  ChangeDepthCommand.prototype.getType = function() {
    return 'Modify';
  };

  return ChangeDepthCommand;

})(Command);
