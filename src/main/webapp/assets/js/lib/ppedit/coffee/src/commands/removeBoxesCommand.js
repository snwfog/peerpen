// Generated by CoffeeScript 1.7.1
var RemoveBoxesCommand,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

RemoveBoxesCommand = (function(_super) {
  __extends(RemoveBoxesCommand, _super);

  function RemoveBoxesCommand(editor, pageNum, boxesSelector) {
    var box, boxArray;
    this.editor = editor;
    this.pageNum = pageNum;
    RemoveBoxesCommand.__super__.constructor.call(this);
    boxArray = boxesSelector.toArray();
    this.boxIds = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = boxArray.length; _i < _len; _i++) {
        box = boxArray[_i];
        _results.push(box.id);
      }
      return _results;
    })();
    this.boxes = this.editor.areas[this.pageNum].boxesContainer.getBoxesFromIds(this.boxIds);
  }

  RemoveBoxesCommand.prototype.execute = function() {
    var boxId, _i, _len, _ref, _results;
    this.editor.areas[this.pageNum].boxesContainer.removeBoxes(this.boxIds);
    _ref = this.boxIds;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      boxId = _ref[_i];
      _results.push(this.editor.panel.removeBoxRow(boxId));
    }
    return _results;
  };

  RemoveBoxesCommand.prototype.undo = function() {
    var box, _i, _len, _ref, _results;
    _ref = this.boxes;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      box = _ref[_i];
      this.editor.areas[this.pageNum].boxesContainer.addBox(box);
      _results.push(this.editor.panel[this.pageNum].addBoxRow(box.element.attr('id')));
    }
    return _results;
  };

  RemoveBoxesCommand.prototype.getType = function() {
    return 'Remove';
  };

  return RemoveBoxesCommand;

})(Command);
