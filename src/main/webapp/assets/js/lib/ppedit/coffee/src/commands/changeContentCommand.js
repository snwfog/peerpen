// Generated by CoffeeScript 1.7.1
var ChangeBoxContentCommand,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

ChangeBoxContentCommand = (function(_super) {
  __extends(ChangeBoxContentCommand, _super);

  function ChangeBoxContentCommand(box, prevContent, newContent) {
    this.box = box;
    this.prevContent = prevContent;
    this.newContent = newContent;
    ChangeBoxContentCommand.__super__.constructor.call(this);
    this.boxIds.push(this.box.element.attr('id'));
  }

  ChangeBoxContentCommand.prototype.execute = function() {
    return this.box.element.html(this.newContent);
  };

  ChangeBoxContentCommand.prototype.undo = function() {
    return this.box.element.html(this.prevContent);
  };

  ChangeBoxContentCommand.prototype.getType = function() {
    return 'Modify';
  };

  return ChangeBoxContentCommand;

})(Command);
