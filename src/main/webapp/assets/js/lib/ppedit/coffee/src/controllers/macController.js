// Generated by CoffeeScript 1.7.1

/*
Keyboard Mapping Controller for clients running on Mac
 */
var MacController;

MacController = (function() {
  function MacController(root) {
    this.root = root;
    this.leftCmdKeyPressed = false;
    this.rightCmdKeyPressed = false;
  }

  MacController.prototype.bindEvents = function() {
    return this.root.keydown((function(_this) {
      return function(event) {
        if (event.keyCode === KeyCodes.MAC_CMD_LEFT) {
          return _this.leftCmdKeyPressed = true;
        } else if (event.keyCode === KeyCodes.Z && _this._cmdKeyIsPressed()) {
          event.preventDefault();
          return _this.root.trigger('requestUndo');
        } else if (event.keyCode === KeyCodes.Y && _this._cmdKeyIsPressed()) {
          event.preventDefault();
          return _this.root.trigger('requestRedo');
        } else if (event.keyCode === KeyCodes.MAC_DELETE && _this._cmdKeyIsPressed()) {
          event.preventDefault();
          return _this.root.trigger('requestDelete');
        } else if (event.keyCode === KeyCodes.C && _this._cmdKeyIsPressed() && event.shiftKey) {
          event.preventDefault();
          return _this.root.trigger('requestCopy');
        } else if (event.keyCode === KeyCodes.V && _this._cmdKeyIsPressed() && event.shiftKey) {
          event.preventDefault();
          return _this.root.trigger('requestPaste');
        }
      };
    })(this)).keyup((function(_this) {
      return function(event) {
        if (event.keyCode === KeyCodes.MAC_CMD_LEFT) {
          _this.leftCmdKeyPressed = false;
        }
        if (event.keyCode === KeyCodes.MAC_CMD_RIGHT) {
          _this.rightCmdKeyPressed = false;
        }
        if (event.keyCode === KeyCodes.SHIFT) {
          return _this.shiftKeyPressed = false;
        }
      };
    })(this));
  };

  MacController.prototype._cmdKeyIsPressed = function() {
    return this.rightCmdKeyPressed || this.leftCmdKeyPressed;
  };

  return MacController;

})();
