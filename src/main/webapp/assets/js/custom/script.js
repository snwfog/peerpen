// Generated by CoffeeScript 1.6.3
$(document).ready(function () {
    $('#photo').imgAreaSelect({
        aspectRatio: '1:1',
        handles: true,
        onSelectEnd :  function (img, c){
            $('input[name="x1"]').val(c.x1);
            $('input[name="y1"]').val(c.y1);
            $('input[name="x2"]').val(c.x2);
            $('input[name="y2"]').val(c.y2);
            alert("x1 " + c.x1 + " y1 " + c.y1);
            alert("x2 " + c.x2 + " y2 " + c.y2);
        }
    });
    $('#photo').imgAreaSelect({
        onSelectEnd: function (img, selection) {
            var div = $('.imgwrapper2');

            //image
            div.css('background-image', 'url(' + img.src + ')');

            //width
            div.css('width', selection.x2 - selection.x1);

            //height
            div.css('height', selection.y2 - selection.y1);

            //x offset
            div.css('background-position-x', -selection.x1);

            //y offset
            div.css('background-position-y', -selection.y1);
        }
    });
    $('#save_personal').click(function (){
        document.getElementById("form_personal").submit();
        return false;
    });

});

//*** DO NOT DELETE **
//Canvass resizing IMG Script
//function resizeImage(url, width, height, callback) {
//    var sourceImage = new Image();
//
//    sourceImage.onload = function() {
//        // Create a canvas with the desired dimensions
//        var canvas = document.createElement("canvas");
//        canvas.width = width;
//        canvas.height = height;
//
//        // Scale and draw the source image to the canvas
//        canvas.getContext("2d").drawImage(sourceImage, 0, 0, width, height);
//
//        // Convert the canvas to a data URL in PNG format
//        callback(canvas.toDataURL());
//    }
//
//    sourceImage.src = url;
//
//    //Extra part Convert to Blob/////
//    var contentType = 'image/png';
//    var b64Data = 'iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==';
//
//    var blob = b64toBlob(b64Data, contentType);
//    var blobUrl = URL.createObjectURL(blob);
//
//    window.location = blobUrl;
//
//    function b64toBlob(b64Data, contentType, sliceSize) {
//        contentType = contentType || '';
//        sliceSize = sliceSize || 512;
//
//        var byteCharacters = atob(b64Data);
//        var byteArrays = [];
//
//        for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
//            var slice = byteCharacters.slice(offset, offset + sliceSize);
//
//            var byteNumbers = new Array(slice.length);
//            for (var i = 0; i < slice.length; i++) {
//                byteNumbers[i] = slice.charCodeAt(i);
//            }
//
//            var byteArray = new Uint8Array(byteNumbers);
//
//            byteArrays.push(byteArray);
//        }
//
//        var blob = new Blob(byteArrays, {type: contentType});
//        return blob;
//    }
//}

//*** DO NOT DELETE **
//function checkAvatar()
//{
//    var avatarLoaded = document.getElementById("photo").src;
//    if(avatarLoaded!="/assets/images/profile/256.jpg")
//    {
//        var img = document.images[0];
//        $(document).ready(function () {
//            // atob to base64_decode the data-URI
//            var image_data = atob(img.src.split(',')[1]);
//            // Use typed arrays to convert the binary data to a Blob
//            var arraybuffer = new ArrayBuffer(image_data.length);
//            var view = new Uint8Array(arraybuffer);
//            for (var i=0; i<image_data.length; i++) {
//                view[i] = image_data.charCodeAt(i) & 0xff;
//            }
//            try {
//                // This is the recommended method:
//                var blob = new Blob([arraybuffer], {type: 'application/octet-stream'});
//            } catch (e) {
//                // The BlobBuilder API has been deprecated in favour of Blob, but older
//                // browsers don't know about the Blob constructor
//                // IE10 also supports BlobBuilder, but since the `Blob` constructor
//                //  also works, there's no need to add `MSBlobBuilder`.
//                var bb = new (window.WebKitBlobBuilder || window.MozBlobBuilder);
//                bb.append(arraybuffer);
//                var blob = bb.getBlob('application/octet-stream'); // <-- Here's the Blob
//            }
//
//            // Use the URL object to create a temporary URL
//            var url = (window.webkitURL || window.URL).createObjectURL(blob);
//            location.href = url; // <-- Download!
//        });
//    }
//}
//*** DO NOT DELETE **
//Document/Image Downloading Script
//function clickme(){
//    var img = document.images[0];
//        var url = img.src.replace(/^data:image\/[^;]/, 'data:application/octet-stream');
//        location.href = url;
//
//};
$(function() {
    return $.stellar({
        horizontalScrolling: false,
        verticalOffset: 40
    });
});



